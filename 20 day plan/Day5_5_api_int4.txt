📘 Day 4: Graphing Screener Results and Visual Analysis (Longform Learning Guide)

==================================================================
📌 Objective
==================================================================
Today, you will:
- Add data visualization to the ScreenerTable UI
- Use charts to show distributions of % gain, volatility, volume, and expiration timelines
- Prepare for interactive chart filters in future days

==================================================================
🧠 Why Add Graphs?
==================================================================
Tables give precise values, but graphs:
- Reveal patterns and outliers at a glance
- Help users spot high-potential trades
- Create a more enjoyable user experience

==================================================================
📁 Step 1: Install Recharts
==================================================================

In your React frontend directory:
```bash
npm install recharts
```

==================================================================
📁 Step 2: Create ScreenerCharts.js
==================================================================
Create `src/components/ScreenerCharts.js`:

```javascript
import React from 'react';
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';

const COLORS = ['#1DB954', '#FFC107', '#FF5733', '#3498db', '#9b59b6'];

function ScreenerCharts({ data }) {
  const gainData = data.map(d => ({
    Ticker: d.Ticker,
    Gain: parseFloat(d['Premium % Gain']) || 0
  })).filter(d => !isNaN(d.Gain));

  const volData = data.map(d => ({
    Ticker: d.Ticker,
    IV: parseFloat(d['Implied Volatility']) || 0
  })).filter(d => !isNaN(d.IV));

  const volumeData = data.map(d => ({
    Ticker: d.Ticker,
    Volume: parseInt(d.Volume) || 0
  })).filter(d => !isNaN(d.Volume));

  return (
    <div className="space-y-6">
      <h2 className="text-2xl font-bold text-white">📈 Screener Visual Summary</h2>

      <div className="bg-[#111] p-4 rounded-xl shadow">
        <h3 className="text-white mb-2">Premium % Gain</h3>
        <ResponsiveContainer width="100%" height={250}>
          <BarChart data={gainData.slice(0, 10)}>
            <XAxis dataKey="Ticker" stroke="#ccc" />
            <YAxis stroke="#ccc" />
            <Tooltip />
            <Bar dataKey="Gain" fill="#1DB954" />
          </BarChart>
        </ResponsiveContainer>
      </div>

      <div className="bg-[#111] p-4 rounded-xl shadow">
        <h3 className="text-white mb-2">Implied Volatility (Top 10)</h3>
        <ResponsiveContainer width="100%" height={250}>
          <BarChart data={volData.slice(0, 10)}>
            <XAxis dataKey="Ticker" stroke="#ccc" />
            <YAxis stroke="#ccc" />
            <Tooltip />
            <Bar dataKey="IV" fill="#FFC107" />
          </BarChart>
        </ResponsiveContainer>
      </div>

      <div className="bg-[#111] p-4 rounded-xl shadow">
        <h3 className="text-white mb-2">Contract Volume (Top 10)</h3>
        <ResponsiveContainer width="100%" height={250}>
          <BarChart data={volumeData.slice(0, 10)}>
            <XAxis dataKey="Ticker" stroke="#ccc" />
            <YAxis stroke="#ccc" />
            <Tooltip />
            <Bar dataKey="Volume" fill="#FF5733" />
          </BarChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
}

export default ScreenerCharts;
```

==================================================================
🧱 Step 3: Update ScreenerTable to Include Graphs
==================================================================
In `ScreenerTable.js`, import the charts and pass data:

```javascript
import ScreenerCharts from './ScreenerCharts';
...
{data.length > 0 && <ScreenerCharts data={data} />}
```

==================================================================
✅ What You’ve Accomplished
==================================================================
✔ Installed and configured Recharts
✔ Created bar charts for % gain, volatility, and volume
✔ Integrated visual analysis into ScreenerTable
✔ Prepared structure for advanced filters and toggles (Day 5)

Next up: Day 5 – Styling and expanding ScreenerTable with visual improvements and filter toggles!
